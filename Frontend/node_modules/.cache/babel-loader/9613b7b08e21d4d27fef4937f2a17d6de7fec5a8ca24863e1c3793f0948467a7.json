{"ast":null,"code":"var _jsxFileName = \"/Users/nainhaja/Desktop/ft_trans/Frontend/src/components/spectator_mod.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport Sketch from \"react-p5\";\nimport { useEffect, useRef, useState } from 'react';\nimport { io } from \"socket.io-client\";\nimport './../index.css';\nimport './../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Spectator = () => {\n  _s();\n  const socket = useRef(null);\n  const my_live_games = useRef(null);\n  const [state, setState] = useState(\"waiting\");\n  const [Cpt, setCpt] = useState(0);\n  const gameState = useRef(null);\n  const [my_width, setWidth] = useState(window.innerWidth);\n  const [m_height, setHeight] = useState(window.innerHeight);\n  const getWindowSizee = () => {\n    const {\n      innerWidth,\n      innerHeight\n    } = window;\n    return {\n      innerWidth,\n      innerHeight\n    };\n  };\n  let ok = 0;\n  let hh = 0;\n  let yarb = 0;\n  const [layhfdk, setLayhfdk] = useState(0);\n  let button_cpt = 0;\n  let buttons = [];\n  let aspectRatio = 0;\n  let absoluteWidth = 0;\n  let relativeWidth = 0;\n  let absoluteHeight = 0;\n  let relativeHeight = 0;\n  let scalingRatio = 0;\n  function buttonPressed(nbr) {\n    button_cpt = 1;\n    //console.log(\"nbr \" + nbr);\n\n    //socket.current?.disconnect();\n    //socket.current?.connect();\n    setCpt(+nbr);\n    // if (socket.current != null)\n    //   socket.current.emit(\"spectJoin\", { value: nbr });\n    setState(\"started watching\");\n    //hh = c;\n    //buttons.splice(0, c);\n    //\n  }\n\n  useEffect(() => {\n    socket.current = io(\"http://localhost:5555\").on(\"connect\", () => {\n      var _socket$current, _socket$current3;\n      (_socket$current = socket.current) === null || _socket$current === void 0 ? void 0 : _socket$current.on(\"gameCount\", data => {\n        //console.log(\"dkhelt ta hna \" + data);\n        //my_live_games.current = data;\n        setLayhfdk(+data);\n        //console.log(\"Hahwa my cpt \" +window.location.pathname.split(\"/\")[2]);\n        //console.log(\"nadi \" + layhfdk);\n      });\n\n      // if (Cpt === 0)\n      // {\n      //   console.log(\"wselt a 3chiri\");\n      //  socket.current?.emit(\"spectJoin\", { value: window.location.pathname.split(\"/\")[2] });\n      //   setCpt(+1); \n      // }\n      // console.log(\"wselt a 3chiri mra tanya \"+Cpt);\n\n      const pageName = window.location.pathname.split(\"/\")[1];\n      const room = window.location.pathname.split(\"/\")[2];\n      if (pageName === \"watch\") {\n        if (room) {\n          var _socket$current2;\n          (_socket$current2 = socket.current) === null || _socket$current2 === void 0 ? void 0 : _socket$current2.emit(\"spectJoin\", {\n            value: room\n          });\n        }\n      }\n      (_socket$current3 = socket.current) === null || _socket$current3 === void 0 ? void 0 : _socket$current3.on(\"queue_status\", data => {\n        console.log(\"dkhlet hna tani \" + layhfdk);\n        if (state == \"waiting\") {}\n        gameState.current = data;\n      });\n      return () => {\n        var _socket$current4, _socket$current5;\n        (_socket$current4 = socket.current) === null || _socket$current4 === void 0 ? void 0 : _socket$current4.removeAllListeners();\n        (_socket$current5 = socket.current) === null || _socket$current5 === void 0 ? void 0 : _socket$current5.close();\n      };\n    });\n  }, [state, layhfdk]);\n  const setup = (p5, canvasParentRef) => {\n    p5.createCanvas(window.innerWidth / 2, window.innerWidth / 4).parent(canvasParentRef);\n    p5.background(122);\n  };\n  function draw(p5) {\n    var _socket$current6;\n    (_socket$current6 = socket.current) === null || _socket$current6 === void 0 ? void 0 : _socket$current6.emit(\"spectJoined\");\n    //console.log(\"nadi \" + layhfdk); \n    p5.resizeCanvas(window.innerWidth / 2, window.innerWidth / 4);\n    p5.background(122);\n    function getWindowSize() {\n      const {\n        innerWidth,\n        innerHeight\n      } = window;\n      return {\n        innerWidth,\n        innerHeight\n      };\n    }\n    function get_window_height() {\n      return getWindowSize().innerHeight;\n    }\n    if (gameState.current != null) {\n      aspectRatio = gameState.current.aspectRatio;\n      absoluteWidth = gameState.current.width;\n      relativeWidth = getWindowSize().innerWidth / 2;\n      absoluteHeight = absoluteWidth / aspectRatio;\n      relativeHeight = relativeWidth / aspectRatio;\n      scalingRatio = relativeWidth / absoluteWidth;\n      // console.log(\"MY section width is  \" + relativeWidth + \" my section height is \" + relativeHeight);\n    }\n\n    p5.resizeCanvas(window.innerWidth / 2, window.innerWidth / 4);\n    p5.background(122);\n\n    // setState(\"Play\");\n    if (gameState.current != null) {\n      const drawClickToStartText = p5 => {\n        if (gameState.current != null && socket.current != null) {\n          let width = getWindowSize().innerWidth;\n          let height = getWindowSize().innerHeight;\n          if (gameState.current.state === \"scored\") {\n            p5.fill(0);\n            p5.textSize(relativeWidth / 35);\n            p5.textAlign(p5.CENTER);\n            const scores = gameState.current.scores;\n            const scoresSum = scores[0] + scores[1];\n            if (gameState.current.players.indexOf(socket.current.id) == -1) {\n              // this is in case it's a spectator he can only watch without interfering in the game because his id couldn't be find \n              // in the players id array \n              p5.text(\"Waiting for players to start the game\", width / 4, width / 16);\n            } else {\n              // in here both the players recieve text in the middle\n              // the one who scored is displaying the waiting text while the other one the click enter\n              // when he does click enter the ball gets respawned in the middle with the scores updated and the ball moving again\n              // thus creating a new partido if you would call it that \n\n              p5.text(socket.current.id === gameState.current.lastscored ? \"Waiting for oponent to start the game\" : \"Click enter to start the game \", width / 4, width / 16);\n            }\n          }\n        }\n      };\n      const drawScore = p5 => {\n        // this method will allow us to draw the score line of both players\n        // we start of by filling the whole screen black \n        // we allign the text in the center and we can rectrieve the score of each players using the gamestate that is constantly\n        //retrieving data from the backend of our code and then we display it\n        // how to create as many buttons as i want based on a number \n\n        p5.fill(0);\n        p5.textSize(getWindowSize().innerHeight * 20 / getWindowSize().innerHeight);\n        p5.textAlign(p5.CENTER);\n        //p5.resizeCanvas(getWindowSize().innerWidth, getWindowSize().innerHeight);\n        //console.log(relativeHeight);\n        if (gameState.current != null) {\n          p5.text(gameState.current.scores[0], getWindowSize().innerWidth / 32 * 7, getWindowSize().innerWidth / 8);\n          p5.text(gameState.current.scores[1], getWindowSize().innerWidth / 32 * 9, getWindowSize().innerWidth / 8);\n          if (gameState.current.state == \"endGame\") {\n            p5.text(\"Player 1 Won the game\", getWindowSize().innerWidth / 4, getWindowSize().innerWidth / 16);\n          }\n        }\n      };\n      //p5.clear();\n\n      // if (gameState.current.state == \"endGame\")\n      //   console.log(\"hana habibi\");\n      //console.log(\"Asbhan lah \" + gameState.current.state);\n      // p5.resizeCanvas(getWindowSize().innerWidth   , relativeHeight);\n      // p5.background(122);\n      drawClickToStartText(p5);\n      drawScore(p5);\n      //console.log(\"Heres my aspect ratio \" + aspectRatio);\n      // i want to use href with buttons inside of a loop that will redirect me to a certain page with a certain  index\n      //the p5.rect method allows us to create a rectangle using the properties in the arguments x,y,width,heigh\n      p5.rect(gameState.current.fr_paddle_x * scalingRatio, gameState.current.fr_paddle_y * scalingRatio, gameState.current.paddle_width * scalingRatio, gameState.current.paddle_height * scalingRatio);\n      p5.rect(gameState.current.sec_paddle_x * scalingRatio, gameState.current.sec_paddle_y * scalingRatio, gameState.current.paddle_width * scalingRatio, gameState.current.paddle_height * scalingRatio);\n      //the p5.circle method allows us to create a circle using the properties in the arguments x,y,Raduis\n      p5.circle(gameState.current.ball_x * scalingRatio, gameState.current.ball_y * scalingRatio, gameState.current.ball_radius * scalingRatio);\n    }\n  }\n\n  //};\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"canvas-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: Array.from({\n        length: layhfdk\n      }, (v, i) => i + 1).map(i => /*#__PURE__*/_jsxDEV(\"a\", {\n        href: `/watch/${i}`,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => buttonPressed(i),\n          children: [\"YAWDI HAAAANAAAAA \", i]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 37\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Sketch, {\n      setup: setup,\n      draw: draw\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 255,\n    columnNumber: 10\n  }, this);\n};\n_s(Spectator, \"AxMYFs0ODO8Fl7btCHwfS0RwIK0=\");\n_c = Spectator;\nexport default Spectator;\nvar _c;\n$RefreshReg$(_c, \"Spectator\");","map":{"version":3,"names":["React","Sketch","useEffect","useRef","useState","io","Spectator","socket","my_live_games","state","setState","Cpt","setCpt","gameState","my_width","setWidth","window","innerWidth","m_height","setHeight","innerHeight","getWindowSizee","ok","hh","yarb","layhfdk","setLayhfdk","button_cpt","buttons","aspectRatio","absoluteWidth","relativeWidth","absoluteHeight","relativeHeight","scalingRatio","buttonPressed","nbr","current","on","data","pageName","location","pathname","split","room","emit","value","console","log","removeAllListeners","close","setup","p5","canvasParentRef","createCanvas","parent","background","draw","resizeCanvas","getWindowSize","get_window_height","width","drawClickToStartText","height","fill","textSize","textAlign","CENTER","scores","scoresSum","players","indexOf","id","text","lastscored","drawScore","rect","fr_paddle_x","fr_paddle_y","paddle_width","paddle_height","sec_paddle_x","sec_paddle_y","circle","ball_x","ball_y","ball_radius","Array","from","length","v","i","map"],"sources":["/Users/nainhaja/Desktop/ft_trans/Frontend/src/components/spectator_mod.tsx"],"sourcesContent":["import React from \"react\";\nimport Sketch from \"react-p5\";\nimport p5Types from \"p5\";\n\nimport P5Wrapper from 'react-p5';\nimport p5 from 'p5';\nimport { Paddle } from \"./Lobby\"\nimport { GameState } from \"./Ball\"\nimport { ReactP5Wrapper } from \"react-p5-wrapper\";\nimport { useEffect, useRef, useState } from 'react';\nimport { io, Socket } from \"socket.io-client\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { stat } from \"fs\";\nimport './../index.css';\nimport './../App.css';\ninterface live_games {\n    count: number;\n}\n\nconst Spectator = () => {\n\n  const socket = useRef(null as null | Socket);\n  const my_live_games = useRef(null as null | live_games);\n  const [state, setState] = useState(\"waiting\");\n  const [Cpt, setCpt] = useState(0);\n\n   const gameState = useRef(null as null | GameState);\n\n\n  const [my_width, setWidth] = useState(window.innerWidth);\n  const [m_height, setHeight] = useState(window.innerHeight);\n\n  const getWindowSizee = () => {\n    const { innerWidth, innerHeight } = window;\n    return { innerWidth, innerHeight };\n  }\n\n\n\n\n  let ok = 0;\n  let hh = 0;\n  let yarb = 0;\n  const [layhfdk, setLayhfdk] = useState(0);\n  let button_cpt = 0;\n  let buttons: p5.Element[] = [];\n\n  let aspectRatio: number = 0;\n\n  let absoluteWidth: number = 0;\n  let relativeWidth: number = 0;\n\n  let absoluteHeight: number = 0;\n  let relativeHeight: number = 0;\n\n  let scalingRatio: number = 0;\n\n  function buttonPressed(nbr: number) {\n    button_cpt = 1;\n    //console.log(\"nbr \" + nbr);\n\n    \n    //socket.current?.disconnect();\n    //socket.current?.connect();\n    setCpt(+nbr);\n    // if (socket.current != null)\n    //   socket.current.emit(\"spectJoin\", { value: nbr });\n    setState(\"started watching\");\n    //hh = c;\n    //buttons.splice(0, c);\n    //\n  }\n\n  useEffect(() => {\n    socket.current = io(\"http://localhost:5555\").on(\"connect\", () => {\n\n      \n      socket.current?.on(\"gameCount\", (data) => {\n        //console.log(\"dkhelt ta hna \" + data);\n        //my_live_games.current = data;\n        setLayhfdk(+data);\n        //console.log(\"Hahwa my cpt \" +window.location.pathname.split(\"/\")[2]);\n        //console.log(\"nadi \" + layhfdk);\n      });\n\n      // if (Cpt === 0)\n      // {\n      //   console.log(\"wselt a 3chiri\");\n      //  socket.current?.emit(\"spectJoin\", { value: window.location.pathname.split(\"/\")[2] });\n      //   setCpt(+1); \n      // }\n      // console.log(\"wselt a 3chiri mra tanya \"+Cpt);\n\n\n      const pageName = window.location.pathname.split(\"/\")[1];\n      const room = window.location.pathname.split(\"/\")[2];\n      if (pageName === \"watch\")\n      {\n        if (room)\n        {\n          socket.current?.emit(\"spectJoin\", { value: room });\n        }\n      }\n\n\n        socket.current?.on(\"queue_status\", (data: GameState) => {\n          console.log(\"dkhlet hna tani \"+layhfdk);\n          if (state == \"waiting\") {\n\n          }\n          gameState.current = data;\n        });        \n\n\n      return () => {\n        socket.current?.removeAllListeners();\n        socket.current?.close();\n      }\n    });\n  }, [state, layhfdk]);\n\n  const setup = (p5: p5Types, canvasParentRef: Element) => \n  {\n    p5.createCanvas(window.innerWidth / 2, (window.innerWidth / 4)).parent(canvasParentRef)  \n    p5.background(122);\n  }\n\n  function draw(p5: p5Types)\n    {\n        socket.current?.emit(\"spectJoined\");\n        //console.log(\"nadi \" + layhfdk); \n        p5.resizeCanvas(window.innerWidth /2 , window.innerWidth/4);\n        p5.background(122);\n\n        function getWindowSize() {\n            const { innerWidth, innerHeight } = window;\n            return { innerWidth, innerHeight };\n          }\n      \n          function get_window_height() {\n            return getWindowSize().innerHeight;\n          }\n          if (gameState.current != null) {\n            aspectRatio = gameState.current.aspectRatio;\n      \n            absoluteWidth = gameState.current.width;\n            relativeWidth = getWindowSize().innerWidth / 2;\n      \n      \n            absoluteHeight = absoluteWidth / aspectRatio;\n            relativeHeight = (relativeWidth / aspectRatio);\n      \n            scalingRatio = relativeWidth / absoluteWidth;\n           // console.log(\"MY section width is  \" + relativeWidth + \" my section height is \" + relativeHeight);\n          }\n          p5.resizeCanvas(window.innerWidth /2 , window.innerWidth/4);\n          p5.background(122);\n    \n          // setState(\"Play\");\n          if (gameState.current != null) {\n            const drawClickToStartText = (p5: p5Types) => {\n              if (gameState.current != null && socket.current != null) {\n      \n      \n                let width = getWindowSize().innerWidth;\n                let height = getWindowSize().innerHeight;\n                if (gameState.current.state === \"scored\") {\n                  p5.fill(0);\n                  p5.textSize(((relativeWidth) / 35));\n                  p5.textAlign(p5.CENTER);\n                  const scores = gameState.current.scores;\n                  const scoresSum = scores[0] + scores[1];\n                  if (gameState.current.players.indexOf(socket.current.id) == -1) {\n                    // this is in case it's a spectator he can only watch without interfering in the game because his id couldn't be find \n                    // in the players id array \n                    p5.text(\"Waiting for players to start the game\",\n                      (width) / 4,\n                      width / 16\n                    );\n                  }\n                  else {\n                    // in here both the players recieve text in the middle\n                    // the one who scored is displaying the waiting text while the other one the click enter\n                    // when he does click enter the ball gets respawned in the middle with the scores updated and the ball moving again\n                    // thus creating a new partido if you would call it that \n      \n                    p5.text(\n                      socket.current.id === gameState.current.lastscored\n                        ? \"Waiting for oponent to start the game\"\n                        : \"Click enter to start the game \",\n                      (width) / 4,\n                      width / 16\n                    );\n                  }\n                }\n              }\n      \n            };\n      \n            const drawScore = (p5: p5Types) => {\n              // this method will allow us to draw the score line of both players\n              // we start of by filling the whole screen black \n              // we allign the text in the center and we can rectrieve the score of each players using the gamestate that is constantly\n              //retrieving data from the backend of our code and then we display it\n              // how to create as many buttons as i want based on a number \n      \n              p5.fill(0);\n              p5.textSize((getWindowSize().innerHeight * 20) / getWindowSize().innerHeight);\n              p5.textAlign(p5.CENTER);\n              //p5.resizeCanvas(getWindowSize().innerWidth, getWindowSize().innerHeight);\n              //console.log(relativeHeight);\n              if (gameState.current != null) {\n                p5.text(\n                  gameState.current.scores[0],\n                  (getWindowSize().innerWidth / 32) * 7,\n                  getWindowSize().innerWidth / 8\n                );\n                p5.text(\n                  gameState.current.scores[1],\n                  (getWindowSize().innerWidth / 32) * 9,\n                  getWindowSize().innerWidth / 8\n                );\n                if (gameState.current.state == \"endGame\") {\n                  p5.text(\"Player 1 Won the game\",\n                    (getWindowSize().innerWidth) / 4,\n                    getWindowSize().innerWidth / 16\n                  );\n                }\n      \n              }\n      \n            };\n            //p5.clear();\n      \n      \n            // if (gameState.current.state == \"endGame\")\n            //   console.log(\"hana habibi\");\n            //console.log(\"Asbhan lah \" + gameState.current.state);\n            // p5.resizeCanvas(getWindowSize().innerWidth   , relativeHeight);\n            // p5.background(122);\n            drawClickToStartText(p5);\n            drawScore(p5);\n            //console.log(\"Heres my aspect ratio \" + aspectRatio);\n            // i want to use href with buttons inside of a loop that will redirect me to a certain page with a certain  index\n            //the p5.rect method allows us to create a rectangle using the properties in the arguments x,y,width,heigh\n            p5.rect(gameState.current.fr_paddle_x * scalingRatio, gameState.current.fr_paddle_y * scalingRatio, gameState.current.paddle_width * scalingRatio, gameState.current.paddle_height * scalingRatio);\n      \n            p5.rect(gameState.current.sec_paddle_x * scalingRatio, gameState.current.sec_paddle_y * scalingRatio, gameState.current.paddle_width * scalingRatio, gameState.current.paddle_height * scalingRatio);\n            //the p5.circle method allows us to create a circle using the properties in the arguments x,y,Raduis\n            p5.circle(gameState.current.ball_x * scalingRatio, gameState.current.ball_y * scalingRatio, gameState.current.ball_radius * scalingRatio);\n            }\n    }\n  \n  //};\n  return <div className=\"canvas-container\">\n    <div>\n\n        {Array.from({ length: layhfdk }, (v, i) => i + 1).map(i => (\n            <a href={`/watch/${i}`}><button key={i} onClick={() => buttonPressed(i)} >YAWDI HAAAANAAAAA {i}</button></a>\n        ))}\n    </div>\n    <Sketch setup={setup} draw={draw} />\n  </div>;\n};\n\n\nexport default Spectator;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}